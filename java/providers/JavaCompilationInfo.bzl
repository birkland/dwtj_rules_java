'''Defines the `JavaCompilationInfo` provider.
'''

JavaCompilationInfo = provider(
    doc = "Describes the inputs, outputs, and options of a Java compiler invocation for a particular Java target.",
    fields = {
        "srcs": "A depset of the Java source `File`s directly included in a Java target. (This does not include either generated or transitive Java sources). This may be `None`. (E.g., a `java_import` target may not have any source files.).",
        "srcs_args_file": "A `File` listing the Java source files in the `srcs` field. Each line of this `File` is the `File.path` of one of the `srcs` `File`s. These lines are in no particular order. (This field exists so the various lint aspects don't need to re-create a list of a target's Java sources. They can just use this file generated by the original Java target.)",
        "class_path_jars": "A depset of JAR `File`s to be included on the class-path during this compilation.",
        "class_files_output_jar": "A `File` pointing to the JAR of class files generated by this Java compilation action.",
        "main_class": "Either a `string` or `None`. If non-null, this string is used as the output JAR's `Main-Class` manifest attribute.",
        "additional_jar_manifest_attributes": "A list of strings to be included in the manifest of the generated JAR.",
        "java_compiler_toolchain_info": "The `JavaCompilerToolchainInfo` which should be used to compile this Java target.",
        "resources": "A dict from a `File` to be included in the output JAR to its in-JAR path.",
        # TODO(dwtj): Consider supporting compiler plugins
        # TODO(dwtj): Consider supporting "generated_sources_output_jar".
        # TODO(dwtj): Consider supporting "native_headers_archive" (i.e. `javac -h <directory>).
        # TODO(dwtj): Consider supporting Java source code version checks.
    },
)
